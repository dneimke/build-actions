name: Test .NET Project

on:
  workflow_call:
    inputs:
      project-name:
        description: 'Name of the project to test'
        required: true
        type: string
      project-path:
        description: 'Path to the project directory'
        required: true
        type: string
      dotnet-version:
        description: '.NET version to use'
        required: false
        type: string
        default: '8.0.x'
      test-framework:
        description: 'Test framework to use'
        required: false
        type: string
        default: 'xunit'
      collect-coverage:
        description: 'Whether to collect code coverage'
        required: false
        type: boolean
        default: true
    outputs:
      test-success:
        description: 'Whether the tests passed'
        value: ${{ jobs.test.outputs.success }}
      coverage-path:
        description: 'Path to coverage reports'
        value: ${{ jobs.test.outputs.coverage-path }}

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.test.outputs.success }}
      coverage-path: ${{ steps.test.outputs.coverage-path }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Restore .NET dependencies
      run: npx nx g @nx-dotnet/core:restore

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Cache Nx
      uses: actions/cache@v4
      with:
        path: .nx/cache
        key: ${{ runner.os }}-nx-${{ hashFiles('**/nx.json') }}
        restore-keys: |
          ${{ runner.os }}-nx-

    - name: Run tests
      id: test
      run: |
        echo "Testing ${{ inputs.project-name }} at ${{ inputs.project-path }}"
        
        # Check if project has tests
        if [ ! -d "${{ inputs.project-path }}/Tests" ] && [ ! -f "${{ inputs.project-path }}/*.Tests.csproj" ]; then
          echo "No tests found for ${{ inputs.project-name }}"
          echo "success=true" >> $GITHUB_OUTPUT
          echo "coverage-path=" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # Run tests using Nx
        if [ "${{ inputs.collect-coverage }}" = "true" ]; then
          echo "Running tests with coverage..."
          npx nx test ${{ inputs.project-name }} --coverage
        else
          echo "Running tests without coverage..."
          npx nx test ${{ inputs.project-name }}
        fi
        
        if [ $? -eq 0 ]; then
          echo "Tests passed"
          echo "success=true" >> $GITHUB_OUTPUT
          
          # Set coverage path if coverage was collected
          if [ "${{ inputs.collect-coverage }}" = "true" ]; then
            coverageDir="${{ inputs.project-path }}/coverage"
            if [ -d "$coverageDir" ]; then
              echo "coverage-path=$coverageDir" >> $GITHUB_OUTPUT
            else
              echo "coverage-path=" >> $GITHUB_OUTPUT
            fi
          else
            echo "coverage-path=" >> $GITHUB_OUTPUT
          fi
        else
          echo "Tests failed"
          echo "success=false" >> $GITHUB_OUTPUT
          echo "coverage-path=" >> $GITHUB_OUTPUT
          exit 1
        fi

    - name: Upload test results
      if: steps.test.outputs.success == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.project-name }}-test-results
        path: |
          ${{ inputs.project-path }}/TestResults/
          ${{ inputs.project-path }}/coverage/
        retention-days: 7

    - name: Upload coverage to Codecov
      if: inputs.collect-coverage == 'true' && steps.test.outputs.success == 'true' && steps.test.outputs.coverage-path != ''
      uses: codecov/codecov-action@v4
      with:
        file: ${{ steps.test.outputs.coverage-path }}/cobertura.xml
        flags: ${{ inputs.project-name }}
        name: ${{ inputs.project-name }}-coverage 